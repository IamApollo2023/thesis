// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid()) @db.VarChar(36)
  name          String?   @db.VarChar(100)
  email         String    @unique @db.VarChar(100)
  password      String?   @db.VarChar(100)
  emailVerified DateTime?
  image         String?   @db.VarChar(100)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model Admin {
  id        String   @id @default(cuid()) @db.VarChar(36)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(100)
  name      String?  @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid()) @db.VarChar(36)
  userId            String  @db.VarChar(36)
  type              String  @db.VarChar(50)
  provider          String  @db.VarChar(50)
  providerAccountId String  @db.VarChar(100)
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String? @db.VarChar(50)
  scope             String? @db.VarChar(100)
  id_token          String? @db.Text
  session_state     String? @db.VarChar(100)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid()) @db.VarChar(36)
  sessionToken String   @unique @db.VarChar(100)
  userId       String   @db.VarChar(36)
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
